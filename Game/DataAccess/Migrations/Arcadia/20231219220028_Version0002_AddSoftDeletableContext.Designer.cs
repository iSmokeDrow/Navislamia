// <auto-generated />

#nullable disable

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Navislamia.Game.DataAccess.Contexts;

namespace Navislamia.Game.DataAccess.Migrations.Arcadia
{
    [DbContext(typeof(ArcadiaContext))]
    [Migration("20231219220028_Version0002_AddSoftDeletableContext")]
    partial class Version0002_AddSoftDeletableContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Navislamia.Game.Models.Arcadia.ChannelResourceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Bottom")
                        .HasColumnType("integer");

                    b.Property<int>("ChannelType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Left")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Right")
                        .HasColumnType("integer");

                    b.Property<int>("Top")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ChannelResources");
                });

            modelBuilder.Entity("Navislamia.Game.Models.Arcadia.EffectResourceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("EffectResources");
                });

            modelBuilder.Entity("Navislamia.Game.Models.Arcadia.EnhanceResourceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("LocalFlag")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EnhanceType")
                        .HasColumnType("integer");

                    b.Property<int>("FailResult")
                        .HasColumnType("integer");

                    b.Property<short>("MaxEnhance")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal[]>("Percentage")
                        .HasMaxLength(20)
                        .HasPrecision(10, 3)
                        .HasColumnType("numeric[]");

                    b.Property<int>("RequiredItemId")
                        .HasColumnType("integer");

                    b.HasKey("Id", "LocalFlag");

                    b.ToTable("EnhanceResources");
                });

            modelBuilder.Entity("Navislamia.Game.Models.Arcadia.ItemEffectResourceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("EffectId")
                        .HasColumnType("bigint");

                    b.Property<bool>("EffectLevel")
                        .HasColumnType("boolean");

                    b.Property<int>("EffectType")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("OrdinalId")
                        .HasColumnType("bigint");

                    b.Property<long>("TooltipId")
                        .HasColumnType("bigint");

                    b.Property<decimal[]>("Values")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric[]");

                    b.HasKey("Id");

                    b.ToTable("ItemEffectResources", t =>
                        {
                            t.HasCheckConstraint("CK_ItemEffectResourceEntity_Values_MaxSize20", "cardinality(\"Values\") <= 20");
                        });
                });

            modelBuilder.Entity("Navislamia.Game.Models.Arcadia.ItemResourceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AvailablePeriod")
                        .HasColumnType("integer");

                    b.Property<short[]>("BaseTypes")
                        .HasMaxLength(4)
                        .HasColumnType("smallint[]");

                    b.Property<decimal[,]>("BaseValues")
                        .HasMaxLength(8)
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric[]");

                    b.Property<int>("CoolTime")
                        .HasColumnType("integer");

                    b.Property<short>("CoolTimeGroup")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte>("DecreaseType")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("EffectId")
                        .HasColumnType("integer");

                    b.Property<int>("Endurance")
                        .HasColumnType("integer");

                    b.Property<int>("Enhance")
                        .HasColumnType("integer");

                    b.Property<long?[]>("EnhanceIds")
                        .HasMaxLength(2)
                        .HasColumnType("bigint[]");

                    b.Property<decimal[,]>("EnhanceValues")
                        .HasMaxLength(8)
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric[]");

                    b.Property<int>("EtherealDurability")
                        .HasColumnType("integer");

                    b.Property<int>("Grade")
                        .HasColumnType("integer");

                    b.Property<int>("Group")
                        .HasColumnType("integer");

                    b.Property<int>("HuntaholicPoint")
                        .HasColumnType("integer");

                    b.Property<int>("ItemBaseType")
                        .HasColumnType("integer");

                    b.Property<int>("ItemType")
                        .HasColumnType("integer");

                    b.Property<int>("ItemUseFlag")
                        .HasColumnType("integer");

                    b.Property<short>("JobDepth")
                        .HasColumnType("smallint");

                    b.Property<int>("JobRestriction")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("Material")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("NameId")
                        .HasColumnType("integer");

                    b.Property<short[]>("OptTypes")
                        .HasMaxLength(4)
                        .HasColumnType("smallint[]");

                    b.Property<decimal[,]>("OptValues")
                        .HasMaxLength(8)
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric[]");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("RaceRestriction")
                        .HasColumnType("integer");

                    b.Property<decimal>("Range")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("Rank")
                        .HasColumnType("integer");

                    b.Property<string>("ScriptText")
                        .HasColumnType("text");

                    b.Property<int?>("SetId")
                        .HasColumnType("integer");

                    b.Property<int>("SetPartFlag")
                        .HasColumnType("integer");

                    b.Property<int?>("SkillId")
                        .HasColumnType("integer");

                    b.Property<int>("SocketCount")
                        .HasColumnType("integer");

                    b.Property<int?>("StateId")
                        .HasColumnType("integer");

                    b.Property<int>("StateLevel")
                        .HasColumnType("integer");

                    b.Property<int>("StateTime")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int?>("SummonId")
                        .HasColumnType("integer");

                    b.Property<int>("TargetMaxLevel")
                        .HasColumnType("integer");

                    b.Property<int>("TargetMinLevel")
                        .HasColumnType("integer");

                    b.Property<decimal>("ThrowRange")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<int?>("TooltipId")
                        .HasColumnType("integer");

                    b.Property<int>("UseMaxLevel")
                        .HasColumnType("integer");

                    b.Property<int>("UseMinLevel")
                        .HasColumnType("integer");

                    b.Property<int>("WearType")
                        .HasColumnType("integer");

                    b.Property<decimal>("Weight")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("Id");

                    b.ToTable("ItemResources");
                });

            modelBuilder.Entity("Navislamia.Game.Models.Arcadia.LevelResourceEntity", b =>
                {
                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Level"));

                    b.Property<int[]>("JLvs")
                        .HasColumnType("integer[]");

                    b.Property<long>("NormalExp")
                        .HasColumnType("bigint");

                    b.HasKey("Level");

                    b.ToTable("LevelResources");
                });

            modelBuilder.Entity("Navislamia.Game.Models.Arcadia.SetItemEffectResourceEntity", b =>
                {
                    b.Property<int>("SetId")
                        .HasColumnType("integer");

                    b.Property<short>("SetParts")
                        .HasColumnType("smallint");

                    b.Property<short[]>("BaseTypes")
                        .HasMaxLength(2)
                        .HasColumnType("smallint[]");

                    b.Property<decimal[,]>("BaseValues")
                        .HasMaxLength(8)
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric[]");

                    b.Property<int>("EffectId")
                        .HasColumnType("integer");

                    b.Property<short[]>("OptTypes")
                        .HasMaxLength(2)
                        .HasColumnType("smallint[]");

                    b.Property<decimal[,]>("OptValues")
                        .HasMaxLength(8)
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric[]");

                    b.Property<int>("TextId")
                        .HasColumnType("integer");

                    b.Property<int>("TooltipId")
                        .HasColumnType("integer");

                    b.HasKey("SetId", "SetParts");

                    b.ToTable("SetItemEffectResources");
                });

            modelBuilder.Entity("Navislamia.Game.Models.Arcadia.SkillResourceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CastRange")
                        .HasColumnType("integer");

                    b.Property<string>("CastingLevel")
                        .HasColumnType("text");

                    b.Property<string>("CastingType")
                        .HasColumnType("text");

                    b.Property<int>("CoolTimeGroupId")
                        .HasColumnType("integer");

                    b.Property<decimal>("CostEnergy")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("CostEnergyPerSkl")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("CostExp")
                        .HasColumnType("integer");

                    b.Property<int>("CostExpPerEnhance")
                        .HasColumnType("integer");

                    b.Property<int>("CostHavoc")
                        .HasColumnType("integer");

                    b.Property<int>("CostHavocPerSkl")
                        .HasColumnType("integer");

                    b.Property<int>("CostHp")
                        .HasColumnType("integer");

                    b.Property<decimal>("CostHpPer")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("CostHpPerSkl")
                        .HasColumnType("integer");

                    b.Property<decimal>("CostHpPerSklPer")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("CostItem")
                        .HasColumnType("integer");

                    b.Property<int>("CostItemCount")
                        .HasColumnType("integer");

                    b.Property<int>("CostItemCountPerSkl")
                        .HasColumnType("integer");

                    b.Property<int>("CostJp")
                        .HasColumnType("integer");

                    b.Property<int>("CostJpPerEnhance")
                        .HasColumnType("integer");

                    b.Property<int>("CostMp")
                        .HasColumnType("integer");

                    b.Property<decimal>("CostMpPer")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("CostMpPerEnhance")
                        .HasColumnType("integer");

                    b.Property<int>("CostMpPerSkl")
                        .HasColumnType("integer");

                    b.Property<decimal>("CostMpPerSklPer")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CriticalBonus")
                        .HasColumnType("integer");

                    b.Property<int>("CriticalBonusPerSkl")
                        .HasColumnType("integer");

                    b.Property<decimal>("DelayCast")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("DelayCastModePerEnhance")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("DelayCastPerSkl")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("DelayCommon")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("DelayCooltime")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("DelayCooltimeModePerEnhance")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("DelayCooltimePerSkl")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DescriptionId")
                        .HasColumnType("integer");

                    b.Property<int>("EffectType")
                        .HasColumnType("integer");

                    b.Property<int>("ElementalType")
                        .HasColumnType("integer");

                    b.Property<short>("HateBasic")
                        .HasColumnType("smallint");

                    b.Property<decimal>("HateMod")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("HatePerEnhance")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("HatePerSkill")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<short>("HitBonus")
                        .HasColumnType("smallint");

                    b.Property<short>("HitBonusPerEnhance")
                        .HasColumnType("smallint");

                    b.Property<string>("IconFileName")
                        .HasColumnType("text");

                    b.Property<int>("IconId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCorpse")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHarmful")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPassive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPhysicalAct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsProjectile")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsToggle")
                        .HasColumnType("boolean");

                    b.Property<int>("IsValid")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<short>("Percentage")
                        .HasColumnType("smallint");

                    b.Property<int>("ProbabilityIncBySlv")
                        .HasColumnType("integer");

                    b.Property<int>("ProbabilityOnHit")
                        .HasColumnType("integer");

                    b.Property<decimal>("ProjectileAcceleration")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("ProjectileSpeed")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("RequiredHavoc")
                        .HasColumnType("integer");

                    b.Property<int>("RequiredHavocBurst")
                        .HasColumnType("integer");

                    b.Property<int>("RequiredHp")
                        .HasColumnType("integer");

                    b.Property<int>("RequiredMp")
                        .HasColumnType("integer");

                    b.Property<int>("RequiredStateId")
                        .HasColumnType("integer");

                    b.Property<int>("RequiredTarget")
                        .HasColumnType("integer");

                    b.Property<int>("RequriedLevel")
                        .HasColumnType("integer");

                    b.Property<int>("SkillEnchantLinkId")
                        .HasColumnType("integer");

                    b.Property<string>("SkillLvupLimit")
                        .HasColumnType("text");

                    b.Property<int>("StateId")
                        .HasColumnType("integer");

                    b.Property<int>("StateLevelBase")
                        .HasColumnType("integer");

                    b.Property<decimal>("StateLevelPerEnhance")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("StateLevelPerSkill")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("StateSecond")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("StateSecondPerEnhance")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("StateSecondPerLevel")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("Target")
                        .HasColumnType("integer");

                    b.Property<int>("TextId")
                        .HasColumnType("integer");

                    b.Property<int>("ToggleGroup")
                        .HasColumnType("integer");

                    b.Property<int>("TooltipId")
                        .HasColumnType("integer");

                    b.Property<bool>("UseOnCharacter")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseOnEnemy")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseOnGuild")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseOnMonster")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseOnNeutral")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseOnParty")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseOnPurple")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseOnSelf")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseOnSummon")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithAxe")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithCrossbow")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithDagger")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithDoubleAxe")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithDoubleDagger")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithDoubleSword")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithHeavybow")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithLightbow")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithOneHandAxe")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithOneHandMace")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithOneHandStaff")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithOneHandSword")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithShieldOnly")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithSpear")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithTwoHandMace")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithTwoHandStaff")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithTwoHandSword")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseWithWeaponNotRequired")
                        .HasColumnType("boolean");

                    b.Property<int>("ValidRange")
                        .HasColumnType("integer");

                    b.Property<decimal[]>("Values")
                        .HasMaxLength(19)
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric[]");

                    b.HasKey("Id");

                    b.ToTable("SkillResources");
                });

            modelBuilder.Entity("Navislamia.Game.Models.Arcadia.StatResourceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Agility")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Dexterity")
                        .HasColumnType("integer");

                    b.Property<int>("Intelligence")
                        .HasColumnType("integer");

                    b.Property<int>("Luck")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Strength")
                        .HasColumnType("integer");

                    b.Property<int>("Vitality")
                        .HasColumnType("integer");

                    b.Property<int>("Wisdom")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("StatResources");
                });

            modelBuilder.Entity("Navislamia.Game.Models.Arcadia.StateResourceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AddDamageBase")
                        .HasColumnType("integer");

                    b.Property<int>("AddDamagePerSkl")
                        .HasColumnType("integer");

                    b.Property<decimal>("AmplifyBase")
                        .HasPrecision(13, 3)
                        .HasColumnType("numeric(13,3)");

                    b.Property<decimal>("AmplifyPerSkill")
                        .HasPrecision(13, 3)
                        .HasColumnType("numeric(13,3)");

                    b.Property<int>("BaseEffect")
                        .HasColumnType("integer");

                    b.Property<int>("CastFxId")
                        .HasColumnType("integer");

                    b.Property<int>("CastFxPosId")
                        .HasColumnType("integer");

                    b.Property<int>("CastSkillId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int[]>("DuplicateGroup")
                        .HasMaxLength(3)
                        .HasColumnType("integer[]");

                    b.Property<int>("EffectType")
                        .HasColumnType("integer");

                    b.Property<int>("ElementalType")
                        .HasColumnType("integer");

                    b.Property<int>("FireInterval")
                        .HasColumnType("integer");

                    b.Property<int>("FxId")
                        .HasColumnType("integer");

                    b.Property<int>("HitFxId")
                        .HasColumnType("integer");

                    b.Property<int>("HitFxPosId")
                        .HasColumnType("integer");

                    b.Property<string>("IconFileName")
                        .HasColumnType("text");

                    b.Property<int>("IconId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsHarmful")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PosId")
                        .HasColumnType("integer");

                    b.Property<string>("ReiterationCount")
                        .HasColumnType("text");

                    b.Property<int>("SpecialOutputFxDelay")
                        .HasColumnType("integer");

                    b.Property<int>("SpecialOutputFxId")
                        .HasColumnType("integer");

                    b.Property<int>("SpecialOutputFxPosId")
                        .HasColumnType("integer");

                    b.Property<int>("SpecialOutputTimingId")
                        .HasColumnType("integer");

                    b.Property<int>("StateFxId")
                        .HasColumnType("integer");

                    b.Property<int>("StateFxPosId")
                        .HasColumnType("integer");

                    b.Property<int>("StateGroup")
                        .HasColumnType("integer");

                    b.Property<short>("StateTimeType")
                        .HasColumnType("smallint");

                    b.Property<int>("TextId")
                        .HasColumnType("integer");

                    b.Property<int>("TooltipId")
                        .HasColumnType("integer");

                    b.Property<bool>("UseOnCharacter")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseOnMonster")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseOnSummon")
                        .HasColumnType("boolean");

                    b.Property<decimal[]>("Values")
                        .HasMaxLength(20)
                        .HasPrecision(13, 3)
                        .HasColumnType("numeric[]");

                    b.HasKey("Id");

                    b.ToTable("StateResources");
                });

            modelBuilder.Entity("Navislamia.Game.Models.Arcadia.StringResourceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StringResources");
                });

            modelBuilder.Entity("Navislamia.Game.Models.Arcadia.SummonResourceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AttackMotionSpeed")
                        .HasColumnType("integer");

                    b.Property<decimal>("AttackRange")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<int[]>("CameraPosition")
                        .HasColumnType("integer[]");

                    b.Property<int>("CardId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EvolveIntoSummonId")
                        .HasColumnType("integer");

                    b.Property<int>("EvolveType")
                        .HasColumnType("integer");

                    b.Property<string>("FaceFileName")
                        .HasColumnType("text");

                    b.Property<int>("FaceId")
                        .HasColumnType("integer");

                    b.Property<string>("IllustFileName")
                        .HasColumnType("text");

                    b.Property<bool>("IsRidingOnly")
                        .HasColumnType("boolean");

                    b.Property<int>("MagicType")
                        .HasColumnType("integer");

                    b.Property<int>("Material")
                        .HasColumnType("integer");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<int>("ModelId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MotionFileId")
                        .HasColumnType("integer");

                    b.Property<int>("NameId")
                        .HasColumnType("integer");

                    b.Property<int>("RidingMotionType")
                        .HasColumnType("integer");

                    b.Property<int>("RidingSpeed")
                        .HasColumnType("integer");

                    b.Property<int>("RunSpeed")
                        .HasColumnType("integer");

                    b.Property<decimal>("Scale")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<string>("ScriptText")
                        .HasColumnType("text");

                    b.Property<decimal>("Size")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<int[]>("SkillIds")
                        .HasColumnType("integer[]");

                    b.Property<int[]>("SkillTextIds")
                        .HasColumnType("integer[]");

                    b.Property<int>("SlantType")
                        .HasColumnType("integer");

                    b.Property<int>("StandardRunSpeed")
                        .HasColumnType("integer");

                    b.Property<int>("StandardWalkSpeed")
                        .HasColumnType("integer");

                    b.Property<int>("StatId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TargetFxSize")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal[]>("TargetPosition")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric[]");

                    b.Property<int>("TextFeatureId")
                        .HasColumnType("integer");

                    b.Property<int>("TextureGroup")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("WalkType")
                        .HasColumnType("integer");

                    b.Property<int>("WeaponType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SummonResources");
                });

            modelBuilder.Entity("Navislamia.Game.Models.GlobalVariableEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GlobalVariables");
                });
#pragma warning restore 612, 618
        }
    }
}
